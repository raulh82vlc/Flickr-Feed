
/*
 * Copyright (C) 2018 Raul Hernandez Lopez
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

android {
    compileSdkVersion parent.ext.androidCompileSdkVersion
    defaultConfig {
        applicationId "com.raulh82vlc.flickrj"
        minSdkVersion parent.ext.androidMinSdkVersion
        targetSdkVersion parent.ext.androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        /**
         * Set whether lint should check for fatal errors during release builds. Default is true.
         * If issues with severity "fatal" are found, the release build is aborted.
         */
        checkReleaseBuilds false
        abortOnError false
        // if true, only report errors
        ignoreWarnings true
        // set to true to turn off analysis progress reporting by lint
        quiet true
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    implementation "com.android.support:support-annotations:$libSupportAnnotations"
    implementation "com.android.support:appcompat-v7:$libAppCompat"
    implementation "com.android.support:design:$libDesignCompat"
    implementation "com.android.support.constraint:constraint-layout:$libConstraintLayout"
    implementation "com.android.support:recyclerview-v7:$libRecyclerView"
    implementation "javax.inject:javax.inject:$libInject"
    annotationProcessor "com.google.dagger:dagger-compiler:$libDagger"
    implementation "com.google.dagger:dagger-android-support:$libDagger"
    implementation "com.google.dagger:dagger:$libDagger"
    implementation "com.squareup.retrofit2:retrofit:$libRetrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$libRetrofit"
    implementation "com.google.code.gson:gson:$libGson"
    api "io.reactivex.rxjava2:rxjava:$libRxJava"
    api "io.reactivex.rxjava2:rxjava:$libRxAndroid"
    implementation "com.squareup.okhttp3:okhttp:$libOkHttp"
    implementation "com.jakewharton.timber:timber:$libTimber"
    implementation "com.jakewharton:butterknife:$libButterKnife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$libButterKnife"
    implementation "com.squareup.picasso:picasso:$libPicasso"
    testImplementation "org.mockito:mockito-core:$testingMockito"
    testImplementation "junit:junit:$testingJUnit"
}

task checkstyle(type: Checkstyle) {
    configFile file('../config/checkstyle/checkstyle.xml')
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
}
